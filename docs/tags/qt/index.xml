<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qt on Xiang WEI</title>
    <link>https://winsa24.github.io/tags/qt/</link>
    <description>Recent content in Qt on Xiang WEI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2020 &lt;a href=&#34;https://www.wangchucheng.com/&#34;&gt;C. Wang&lt;/a&gt; and &lt;a href=&#34;https://www.ruiqima.com/&#34;&gt;R. Ma&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 11 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://winsa24.github.io/tags/qt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qt - Microwave</title>
      <link>https://winsa24.github.io/courses/igr203/software-dev/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/software-dev/</guid>
      <description> 2 Ways to solve The specification of the interaction of a complex interface Statecharts/state machine Specification languages
 StateMachine &amp;amp; StateCharts  Statecharts is hierarchical state machines
 </description>
    </item>
    
    <item>
      <title>Qt - Microwave</title>
      <link>https://winsa24.github.io/courses/igr203/lab3/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/lab3/</guid>
      <description>Qt Lab#3 : Statecharts Source code: https://github.com/winsa24/-QT-Microwave Introduction I implement the presentation and interaction control panel of a microwave oven on Qt.
1. Design the Statechart 2. Graphical interface In this part, I created a graphical interface by dragging and dropping based on Qt Designor. I used QLineEdit and QDial as display panel and slider.
3. Implement In this part, I first implement the QtStateMachine according to the Statechart shown in the first section. I created 9 states and use state-&amp;gt;addTransition() to link different states with different buttons.</description>
    </item>
    
    <item>
      <title>Qt - Drawing Tool</title>
      <link>https://winsa24.github.io/courses/igr201/lab2/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr201/lab2/</guid>
      <description>Qt Lab #2: 2D Drawing Tool In this work, I completely finished a drawing application based on Qt toolkit by following all the instructions in Lab 2. The application has an interactive interface which allows users to draw multiple shapes in different colors, line styles and thickness, by clicking buttons or dragging sliders. Moreover, by clicking bottom buttons users can switch to editing part which allows users to select an existing shape and move, resize or change attributes of it.</description>
    </item>
    
    <item>
      <title>Qt - Basic</title>
      <link>https://winsa24.github.io/courses/igr201/lab1/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr201/lab1/</guid>
      <description>Qt Lab#1 : Qt Basic Source code: https://github.com/winsa24/-QT-BasicMenu </description>
    </item>
    
    <item>
      <title>Drawing Tool</title>
      <link>https://winsa24.github.io/projects/qt2/</link>
      <pubDate>Tue, 15 Sep 2020 02:01:58 +0530</pubDate>
      
      <guid>https://winsa24.github.io/projects/qt2/</guid>
      <description>Created a simple drawing application based on Qt toolkit (which I’ve tried to use in the Course Design of Data Structures in my undergraduate study). The application has an interactive interface which allows users to draw multiple shapes in different colors, line styles and thickness, by clicking buttons or dragging sliders. Users can also select an existing shape and move, resize or change attributes of it. It also allows users to read or save the images.</description>
    </item>
    
    <item>
      <title>Course Design of Data Structure</title>
      <link>https://winsa24.github.io/projects/qt1/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/projects/qt1/</guid>
      <description>Wrote “2018 World Cup inquiring system” by VS and QT independently, studied knowledge of front-end and back-end development, realized the function of inquiring information of games in a specific date selected by dragging roller and showing all kinds of real-time statistical results.</description>
    </item>
    
  </channel>
</rss>
