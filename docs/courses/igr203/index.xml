<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IGR203: Human-Computer Interaction on Xiang WEI</title>
    <link>https://winsa24.github.io/courses/igr203/</link>
    <description>Recent content in IGR203: Human-Computer Interaction on Xiang WEI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2020 &lt;a href=&#34;https://www.wangchucheng.com/&#34;&gt;C. Wang&lt;/a&gt; and &lt;a href=&#34;https://www.ruiqima.com/&#34;&gt;R. Ma&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 18 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://winsa24.github.io/courses/igr203/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gestural Interfaces</title>
      <link>https://winsa24.github.io/courses/igr203/gesture/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/gesture/</guid>
      <description>To design a gestural interfaces Creating a gesture set and defining a gesture-command mapping Laban feature Laban Movement Analysis (LMA)
 The LMA system provides models for the interpretation of movement, its function and its expression through 4 components: − Body (what) − Effort (how) − Space (where) − Shape (relation with the environment) Effort has 4 Factors thought as a continuum with 2 opposite ends: − Weight : strong, light − Time : quick, substained − Space : flexible, direct − Flow : bound , free</description>
    </item>
    
    <item>
      <title>Perception - Color - Ergonomic</title>
      <link>https://winsa24.github.io/courses/igr203/perception/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/perception/</guid>
      <description>Perception / Action Estimate interaction time : Fitt&amp;rsquo;s law : Pointing time relies on D/W ( Distance to target / Width of target)  Solutions:
  Reduce D : Popup menus / Attract applications or target Increase W : The Mac bar (border is infinite) / Marking menus (rely on angle) Mouse gain : mouse moving speed Semantic pointing : Common actions easy to reach while dangerous hard Avoid Pointing : Hotkeys / Gesture  Hick law : Selecting time relies on n (number of the options) Colors Color models: RGB : Additive model Light emission (screens)</description>
    </item>
    
    <item>
      <title>Qt - Microwave</title>
      <link>https://winsa24.github.io/courses/igr203/software-dev/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/software-dev/</guid>
      <description> 2 Ways to solve The specification of the interaction of a complex interface Statecharts/state machine Specification languages
 StateMachine &amp;amp; StateCharts  Statecharts is hierarchical state machines
 </description>
    </item>
    
    <item>
      <title>User Center Design (UCD)</title>
      <link>https://winsa24.github.io/courses/igr203/ucd/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/ucd/</guid>
      <description>User Center Design (UCD)  3 Constraints to Design : Task - Human - Technology Usability Criteria  Ease of learning: learning cost / use of advanced functionalities Recall: Remember how from one session to the next Productivity: speed of execution Fatigue (cf. repetitive actions) Risk of errors: should be minimized, good feebcak needed otherwise User satisfaction
Accessibility, functionality, time, effort, learnability, satisfaction, …  Ideation Brainstorm, Sketches&amp;hellip;.
Prototype  Methods: • Storyboards — good for user flow • Paper prototypes — good for layout, flow • Video prototypes — good for overall experience • Powerpoint/Photoshop — Look ’n’ feel • Software — functionality</description>
    </item>
    
    <item>
      <title>Qt - Microwave</title>
      <link>https://winsa24.github.io/courses/igr203/lab3/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsa24.github.io/courses/igr203/lab3/</guid>
      <description>Qt Lab#3 : Statecharts Source code: https://github.com/winsa24/-QT-Microwave Introduction I implement the presentation and interaction control panel of a microwave oven on Qt.
1. Design the Statechart 2. Graphical interface In this part, I created a graphical interface by dragging and dropping based on Qt Designor. I used QLineEdit and QDial as display panel and slider.
3. Implement In this part, I first implement the QtStateMachine according to the Statechart shown in the first section. I created 9 states and use state-&amp;gt;addTransition() to link different states with different buttons.</description>
    </item>
    
  </channel>
</rss>
